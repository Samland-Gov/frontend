name: Publish to NPM and Create GitHub Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Load Release Notes
        id: load_release_notes
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          RELEASE_NOTES_FILE="docs/changelog/v${VERSION}.md"
          if [ -f "$RELEASE_NOTES_FILE" ]; then
            # Use a heredoc to preserve newlines properly
            {
              echo "RELEASE_NOTES<<EOF"
              cat "$RELEASE_NOTES_FILE"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
          else
            echo "RELEASE_NOTES=Release notes not found." >> "$GITHUB_OUTPUT"
          fi

      - name: Create Release Archive
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          tar -czf "dist-v${VERSION}.tar.gz" -C dist .

      - name: Create GitHub Release and Upload Archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          NOTES="${{ steps.load_release_notes.outputs.RELEASE_NOTES }}"
          echo "$NOTES" > release_notes.md
          gh release create "v${VERSION}" \
            --title "Release v${VERSION}" \
            --notes-file release_notes.md \
            "dist-v${VERSION}.tar.gz"